// Populate the sidebar
//
// This is a script, and not included directly in the page, to control the total size of the book.
// The TOC contains an entry for each page, so if each page includes a copy of the TOC,
// the total size of the page becomes O(n**2).
class MDBookSidebarScrollbox extends HTMLElement {
    constructor() {
        super();
    }
    connectedCallback() {
        this.innerHTML = '<ol class="chapter"><li class="chapter-item "><a href="overview.html"><strong aria-hidden="true">1.</strong> Overview</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="overview/embedding-resources.html"><strong aria-hidden="true">1.1.</strong> Embedding resources</a></li><li class="chapter-item "><a href="overview/relation.html"><strong aria-hidden="true">1.2.</strong> Relation to other technologies</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="overview/relation/reactjs.html"><strong aria-hidden="true">1.2.1.</strong> React.js</a></li><li class="chapter-item "><a href="overview/relation/mxml.html"><strong aria-hidden="true">1.2.2.</strong> MXML</a></li><li class="chapter-item "><a href="overview/relation/as3.html"><strong aria-hidden="true">1.2.3.</strong> ActionScript 3</a></li><li class="chapter-item "><a href="overview/relation/javascript.html"><strong aria-hidden="true">1.2.4.</strong> JavaScript</a></li><li class="chapter-item "><a href="overview/relation/java.html"><strong aria-hidden="true">1.2.5.</strong> Java</a></li></ol></li><li class="chapter-item "><a href="overview/xml-capabilities.html"><strong aria-hidden="true">1.3.</strong> XML capabilities</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="overview/xml-capabilities/whack.html"><strong aria-hidden="true">1.3.1.</strong> Whack</a></li></ol></li><li class="chapter-item "><a href="overview/whackds.html"><strong aria-hidden="true">1.4.</strong> WhackDS</a></li><li class="chapter-item "><a href="overview/tooling.html"><strong aria-hidden="true">1.5.</strong> Tooling</a></li><li class="chapter-item "><a href="overview/access-control.html"><strong aria-hidden="true">1.6.</strong> Access control namespaces</a></li><li class="chapter-item "><a href="overview/event-model.html"><strong aria-hidden="true">1.7.</strong> Event model</a></li><li class="chapter-item "><a href="overview/conditional-compilation.html"><strong aria-hidden="true">1.8.</strong> Conditional compilation</a></li><li class="chapter-item "><a href="overview/clonage.html"><strong aria-hidden="true">1.9.</strong> Clonage</a></li><li class="chapter-item "><a href="overview/iteration.html"><strong aria-hidden="true">1.10.</strong> Iteration capabilities</a></li><li class="chapter-item "><a href="overview/env.html"><strong aria-hidden="true">1.11.</strong> Environment variables</a></li><li class="chapter-item "><a href="overview/type-matching.html"><strong aria-hidden="true">1.12.</strong> Type matching</a></li></ol></li><li class="chapter-item "><a href="scope.html"><strong aria-hidden="true">2.</strong> Scope</a></li><li class="chapter-item "><a href="definitions.html"><strong aria-hidden="true">3.</strong> Definitions</a></li><li class="chapter-item "><a href="notational-conventions.html"><strong aria-hidden="true">4.</strong> Notational conventions</a></li><li class="chapter-item "><a href="types.html"><strong aria-hidden="true">5.</strong> Types</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="types/wildcard.html"><strong aria-hidden="true">5.1.</strong> Wildcard type</a></li><li class="chapter-item "><a href="types/void.html"><strong aria-hidden="true">5.2.</strong> void type</a></li><li class="chapter-item "><a href="types/null.html"><strong aria-hidden="true">5.3.</strong> null type</a></li><li class="chapter-item "><a href="types/string.html"><strong aria-hidden="true">5.4.</strong> String type</a></li><li class="chapter-item "><a href="types/boolean.html"><strong aria-hidden="true">5.5.</strong> Boolean type</a></li><li class="chapter-item "><a href="types/number.html"><strong aria-hidden="true">5.6.</strong> Number type</a></li><li class="chapter-item "><a href="types/bigint.html"><strong aria-hidden="true">5.7.</strong> BigInt type</a></li><li class="chapter-item "><a href="types/float.html"><strong aria-hidden="true">5.8.</strong> float type</a></li><li class="chapter-item "><a href="types/decimal.html"><strong aria-hidden="true">5.9.</strong> decimal type</a></li><li class="chapter-item "><a href="types/int.html"><strong aria-hidden="true">5.10.</strong> int type</a></li><li class="chapter-item "><a href="types/uint.html"><strong aria-hidden="true">5.11.</strong> uint type</a></li><li class="chapter-item "><a href="types/array.html"><strong aria-hidden="true">5.12.</strong> Array type</a></li><li class="chapter-item "><a href="types/map.html"><strong aria-hidden="true">5.13.</strong> Map type</a></li><li class="chapter-item "><a href="types/tuple.html"><strong aria-hidden="true">5.14.</strong> Tuple types</a></li><li class="chapter-item "><a href="types/function.html"><strong aria-hidden="true">5.15.</strong> Function types</a></li><li class="chapter-item "><a href="types/record.html"><strong aria-hidden="true">5.16.</strong> Record types</a></li><li class="chapter-item "><a href="types/union.html"><strong aria-hidden="true">5.17.</strong> Union types</a></li><li class="chapter-item "><a href="types/object.html"><strong aria-hidden="true">5.18.</strong> Object type</a></li><li class="chapter-item "><a href="types/this.html"><strong aria-hidden="true">5.19.</strong> This type</a></li></ol></li><li class="chapter-item "><a href="conversions.html"><strong aria-hidden="true">6.</strong> Conversions</a></li><li class="chapter-item "><a href="property-lookup.html"><strong aria-hidden="true">7.</strong> Property lookup</a></li><li class="chapter-item "><a href="packages.html"><strong aria-hidden="true">8.</strong> Packages</a></li><li class="chapter-item "><a href="namespaces.html"><strong aria-hidden="true">9.</strong> Namespaces</a></li><li class="chapter-item "><a href="classes.html"><strong aria-hidden="true">10.</strong> Classes</a></li><li class="chapter-item "><a href="enums.html"><strong aria-hidden="true">11.</strong> Enumerations</a></li><li class="chapter-item "><a href="interfaces.html"><strong aria-hidden="true">12.</strong> Interfaces</a></li><li class="chapter-item "><a href="variables.html"><strong aria-hidden="true">13.</strong> Variables</a></li><li class="chapter-item "><a href="virtual-variables.html"><strong aria-hidden="true">14.</strong> Virtual variables</a></li><li class="chapter-item "><a href="methods.html"><strong aria-hidden="true">15.</strong> Methods</a></li><li class="chapter-item "><a href="aliases.html"><strong aria-hidden="true">16.</strong> Aliases</a></li><li class="chapter-item "><a href="metadata.html"><strong aria-hidden="true">17.</strong> Meta-data</a></li><li class="chapter-item "><a href="generics.html"><strong aria-hidden="true">18.</strong> Generics</a></li><li class="chapter-item "><a href="lexical-scopes.html"><strong aria-hidden="true">19.</strong> Lexical scopes</a></li><li class="chapter-item "><a href="default-lexical-scope.html"><strong aria-hidden="true">20.</strong> Default lexical scope</a></li><li class="chapter-item "><a href="conditional-compilation.html"><strong aria-hidden="true">21.</strong> Conditional compilation</a></li><li class="chapter-item "><a href="integrated-configuration-constants.html"><strong aria-hidden="true">22.</strong> Integrated configuration constants</a></li><li class="chapter-item "><a href="unit-testing.html"><strong aria-hidden="true">23.</strong> Unit testing</a></li><li class="chapter-item "><a href="shockdoc.html"><strong aria-hidden="true">24.</strong> ShockDoc comments</a></li><li class="chapter-item "><a href="proxies.html"><strong aria-hidden="true">25.</strong> Proxies</a></li><li class="chapter-item "><a href="lexical-conventions.html"><strong aria-hidden="true">26.</strong> Lexical conventions</a></li><li class="chapter-item "><a href="sx-expressions.html"><strong aria-hidden="true">27.</strong> ShockScript: Expressions</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-expressions/identifiers.html"><strong aria-hidden="true">27.1.</strong> Identifiers</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions.html"><strong aria-hidden="true">27.2.</strong> Primary expressions</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-expressions/primary-expressions/null-literal.html"><strong aria-hidden="true">27.2.1.</strong> Null literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/this-literal.html"><strong aria-hidden="true">27.2.2.</strong> This literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/all-literal.html"><strong aria-hidden="true">27.2.3.</strong> All literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/boolean-literal.html"><strong aria-hidden="true">27.2.4.</strong> Boolean literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/numeric-literal.html"><strong aria-hidden="true">27.2.5.</strong> Numeric literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/string-literal.html"><strong aria-hidden="true">27.2.6.</strong> String literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/regex-literal.html"><strong aria-hidden="true">27.2.7.</strong> Regular expression literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/xml-literal.html"><strong aria-hidden="true">27.2.8.</strong> XML literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/array-literal.html"><strong aria-hidden="true">27.2.9.</strong> Array literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/object-literal.html"><strong aria-hidden="true">27.2.10.</strong> Object literal</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/embed-expression.html"><strong aria-hidden="true">27.2.11.</strong> Embed expression</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/fixed-expression.html"><strong aria-hidden="true">27.2.12.</strong> Fixed expression</a></li><li class="chapter-item "><a href="sx-expressions/primary-expressions/paren-expressions.html"><strong aria-hidden="true">27.2.13.</strong> Parenthesized expressions</a></li></ol></li><li class="chapter-item "><a href="sx-expressions/super-expression.html"><strong aria-hidden="true">27.3.</strong> Super expression</a></li><li class="chapter-item "><a href="sx-expressions/postfix-expressions.html"><strong aria-hidden="true">27.4.</strong> Postfix expressions</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-expressions/postfix-expressions/property-accessors.html"><strong aria-hidden="true">27.4.1.</strong> Property accessors</a></li><li class="chapter-item "><a href="sx-expressions/postfix-expressions/query-operators.html"><strong aria-hidden="true">27.4.2.</strong> Query operators</a></li><li class="chapter-item "><a href="sx-expressions/postfix-expressions/call-expressions.html"><strong aria-hidden="true">27.4.3.</strong> Call expressions</a></li></ol></li><li class="chapter-item "><a href="sx-expressions/new-expressions.html"><strong aria-hidden="true">27.5.</strong> New expressions</a></li><li class="chapter-item "><a href="sx-expressions/unary-expressions.html"><strong aria-hidden="true">27.6.</strong> Unary expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions.html"><strong aria-hidden="true">27.7.</strong> Binary expressions</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-expressions/binary-expressions/exponentiation-expressions.html"><strong aria-hidden="true">27.7.1.</strong> Exponentiation expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/multiplicative-expressions.html"><strong aria-hidden="true">27.7.2.</strong> Multiplicative expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/additive-expressions.html"><strong aria-hidden="true">27.7.3.</strong> Additive expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/shift-expressions.html"><strong aria-hidden="true">27.7.4.</strong> Shift expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/relational-expressions.html"><strong aria-hidden="true">27.7.5.</strong> Relational expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/equality-expressions.html"><strong aria-hidden="true">27.7.6.</strong> Equality expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/bitwise-expressions.html"><strong aria-hidden="true">27.7.7.</strong> Bitwise expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/logical-expressions.html"><strong aria-hidden="true">27.7.8.</strong> Logical expressions</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/coalesce-expression.html"><strong aria-hidden="true">27.7.9.</strong> Coalesce expression</a></li><li class="chapter-item "><a href="sx-expressions/binary-expressions/short-circuit-expressions.html"><strong aria-hidden="true">27.7.10.</strong> Short circuit expressions</a></li></ol></li><li class="chapter-item "><a href="sx-expressions/conditional-expressions.html"><strong aria-hidden="true">27.8.</strong> Conditional expressions</a></li><li class="chapter-item "><a href="sx-expressions/non-assignment-expressions.html"><strong aria-hidden="true">27.9.</strong> Non assignment expressions</a></li><li class="chapter-item "><a href="sx-expressions/assignment-expressions.html"><strong aria-hidden="true">27.10.</strong> Assignment expressions</a></li><li class="chapter-item "><a href="sx-expressions/function-expression.html"><strong aria-hidden="true">27.11.</strong> Function expression</a></li><li class="chapter-item "><a href="sx-expressions/list-expressions.html"><strong aria-hidden="true">27.12.</strong> List expressions</a></li></ol></li><li class="chapter-item "><a href="sx-type-expressions.html"><strong aria-hidden="true">28.</strong> ShockScript: Type expressions</a></li><li class="chapter-item "><a href="sx-patterns.html"><strong aria-hidden="true">29.</strong> ShockScript: Patterns</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-patterns/array-pattern.html"><strong aria-hidden="true">29.1.</strong> Array pattern</a></li><li class="chapter-item "><a href="sx-patterns/object-pattern.html"><strong aria-hidden="true">29.2.</strong> Object pattern</a></li></ol></li><li class="chapter-item "><a href="sx-statements.html"><strong aria-hidden="true">30.</strong> ShockScript: Statements</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-statements/empty-statement.html"><strong aria-hidden="true">30.1.</strong> Empty statement</a></li><li class="chapter-item "><a href="sx-statements/expression-statement.html"><strong aria-hidden="true">30.2.</strong> Expression statement</a></li><li class="chapter-item "><a href="sx-statements/super-statement.html"><strong aria-hidden="true">30.3.</strong> Super statement</a></li><li class="chapter-item "><a href="sx-statements/block-statement.html"><strong aria-hidden="true">30.4.</strong> Block statement</a></li><li class="chapter-item "><a href="sx-statements/labeled-statement.html"><strong aria-hidden="true">30.5.</strong> Labeled statement</a></li><li class="chapter-item "><a href="sx-statements/if-statement.html"><strong aria-hidden="true">30.6.</strong> If statement</a></li><li class="chapter-item "><a href="sx-statements/switch-statements.html"><strong aria-hidden="true">30.7.</strong> Switch statements</a></li><li class="chapter-item "><a href="sx-statements/do-statement.html"><strong aria-hidden="true">30.8.</strong> Do statement</a></li><li class="chapter-item "><a href="sx-statements/while-statement.html"><strong aria-hidden="true">30.9.</strong> While statement</a></li><li class="chapter-item "><a href="sx-statements/for-statements.html"><strong aria-hidden="true">30.10.</strong> For statements</a></li><li class="chapter-item "><a href="sx-statements/continue-statement.html"><strong aria-hidden="true">30.11.</strong> Continue statement</a></li><li class="chapter-item "><a href="sx-statements/break-statement.html"><strong aria-hidden="true">30.12.</strong> Break statement</a></li><li class="chapter-item "><a href="sx-statements/with-statement.html"><strong aria-hidden="true">30.13.</strong> With statement</a></li><li class="chapter-item "><a href="sx-statements/return-statement.html"><strong aria-hidden="true">30.14.</strong> Return statement</a></li><li class="chapter-item "><a href="sx-statements/throw-statement.html"><strong aria-hidden="true">30.15.</strong> Throw statement</a></li><li class="chapter-item "><a href="sx-statements/try-statement.html"><strong aria-hidden="true">30.16.</strong> Try statement</a></li></ol></li><li class="chapter-item "><a href="sx-directives.html"><strong aria-hidden="true">31.</strong> ShockScript: Directives</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-directives/attributes.html"><strong aria-hidden="true">31.1.</strong> Attributes</a></li><li class="chapter-item "><a href="sx-directives/import-directive.html"><strong aria-hidden="true">31.2.</strong> Import directive</a></li><li class="chapter-item "><a href="sx-directives/use-directive.html"><strong aria-hidden="true">31.3.</strong> Use directive</a></li></ol></li><li class="chapter-item "><a href="sx-definitions.html"><strong aria-hidden="true">32.</strong> ShockScript: Definitions</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="sx-definitions/namespace-definition.html"><strong aria-hidden="true">32.1.</strong> Namespace definition</a></li><li class="chapter-item "><a href="sx-definitions/variable-definition.html"><strong aria-hidden="true">32.2.</strong> Variable definition</a></li><li class="chapter-item "><a href="sx-definitions/function-definition.html"><strong aria-hidden="true">32.3.</strong> Function definition</a></li><li class="chapter-item "><a href="sx-definitions/class-definition.html"><strong aria-hidden="true">32.4.</strong> Class definition</a></li><li class="chapter-item "><a href="sx-definitions/enum-definition.html"><strong aria-hidden="true">32.5.</strong> Enum definition</a></li><li class="chapter-item "><a href="sx-definitions/interface-definition.html"><strong aria-hidden="true">32.6.</strong> Interface definition</a></li><li class="chapter-item "><a href="sx-definitions/type-definition.html"><strong aria-hidden="true">32.7.</strong> Type definition</a></li><li class="chapter-item "><a href="sx-definitions/package-definition.html"><strong aria-hidden="true">32.8.</strong> Package definition</a></li><li class="chapter-item "><a href="sx-definitions/program-definition.html"><strong aria-hidden="true">32.9.</strong> Program definition</a></li></ol></li></ol>';
        // Set the current, active page, and reveal it if it's hidden
        let current_page = document.location.href.toString().split("#")[0].split("?")[0];
        if (current_page.endsWith("/")) {
            current_page += "index.html";
        }
        var links = Array.prototype.slice.call(this.querySelectorAll("a"));
        var l = links.length;
        for (var i = 0; i < l; ++i) {
            var link = links[i];
            var href = link.getAttribute("href");
            if (href && !href.startsWith("#") && !/^(?:[a-z+]+:)?\/\//.test(href)) {
                link.href = path_to_root + href;
            }
            // The "index" page is supposed to alias the first chapter in the book.
            if (link.href === current_page || (i === 0 && path_to_root === "" && current_page.endsWith("/index.html"))) {
                link.classList.add("active");
                var parent = link.parentElement;
                if (parent && parent.classList.contains("chapter-item")) {
                    parent.classList.add("expanded");
                }
                while (parent) {
                    if (parent.tagName === "LI" && parent.previousElementSibling) {
                        if (parent.previousElementSibling.classList.contains("chapter-item")) {
                            parent.previousElementSibling.classList.add("expanded");
                        }
                    }
                    parent = parent.parentElement;
                }
            }
        }
        // Track and set sidebar scroll position
        this.addEventListener('click', function(e) {
            if (e.target.tagName === 'A') {
                sessionStorage.setItem('sidebar-scroll', this.scrollTop);
            }
        }, { passive: true });
        var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');
        sessionStorage.removeItem('sidebar-scroll');
        if (sidebarScrollTop) {
            // preserve sidebar scroll position when navigating via links within sidebar
            this.scrollTop = sidebarScrollTop;
        } else {
            // scroll sidebar to current active section when navigating via "next/previous chapter" buttons
            var activeSection = document.querySelector('#sidebar .active');
            if (activeSection) {
                activeSection.scrollIntoView({ block: 'center' });
            }
        }
        // Toggle buttons
        var sidebarAnchorToggles = document.querySelectorAll('#sidebar a.toggle');
        function toggleSection(ev) {
            ev.currentTarget.parentElement.classList.toggle('expanded');
        }
        Array.from(sidebarAnchorToggles).forEach(function (el) {
            el.addEventListener('click', toggleSection);
        });
    }
}
window.customElements.define("mdbook-sidebar-scrollbox", MDBookSidebarScrollbox);
